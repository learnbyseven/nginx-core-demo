user  nginx;
worker_processes  auto;
load_module modules/ngx_http_js_module.so;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}
## HTTP BLOCK
http {
	#match server_ok {
    	#body ~ "server_ok";
	#}
     #limit_conn_zone $binary_remote_addr zone=addr:10m;	
     #limit_conn_status 503;
     #limit_req_zone $binary_remote_addr zone=one:10m rate=1r/m;
     #limit_req_status 429;
     #proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=mycache:10m;
#    map $remote_addr $datagroup1 {
#	"192.168.1.11" "datagroup1";
#	"192.168.1.12" "datagroup1";
#	"192.168.1.13" "datagroup1";
#	"192.168.1.14" "datagroup1";
#	"192.168.1.15" "datagroup1";
#    }
#    map $remote_addr $datagroup2 {
#        "192.168.1.21" "datagroup2";
#        "192.168.1.22" "datagroup2";
#        "192.168.1.23" "datagroup2";
#        "192.168.1.24" "datagroup2";
#        "192.168.1.25" "datagroup2";
#    }
    #Cluster-aware rate limit
    limit_req_zone  $remote_addr zone=perIP:1M rate=1r/s sync;
    limit_req_status 429;
    #keyval_zone zone=sinbin:1M timeout=600 sync; 
    # Cluster-aware "sin bin" with 
    # 10-minute TTL
    #keyval $remote_addr $in_sinbin zone=sinbin;  
    # Populate $in_sinbin with 
    # matched client IP addresses 
    include       /etc/nginx/mime.types;
    ##JS
    #js_include /etc/nginx/conf.d/scripts/client_match.js;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    #TCP OPTIMISATION
    #sendfile        on;
    #tcp_nopush     on;
    #tcp_nodelay on;
    #keepalive_requests  1000;
    #keepalive_timeout 7200;
    #SSL TCP OPTIMISATION
    #ssl_session_cache   shared:SSL:10m;
    #ssl_session_timeout 10m;
#
#    #gzip  on;
#
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/conf.d/http/*.conf;
}


# TCP/UDP proxy and load balancing block
#
#stream {
#	upstream ssh {
#		#LB ALGO TO BOOST PERFORMANCE
#		#least_conn;
#		least_time last_byte;
#		server 192.168.1.50:22;
#		keep
#
#	}
#	server {
#		#proxy_connect_timeout 60s;
#		#proxy_timeout 60s;
#		listen 12345;
#		proxy_pass ssh;
#	} 
#}
